{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/edit-user/edit-user.component.css","webpack:///./src/app/edit-user/edit-user.component.html","webpack:///./src/app/edit-user/edit-user.component.ts","webpack:///./src/app/list-user/list-user.component.css","webpack:///./src/app/list-user/list-user.component.html","webpack:///./src/app/list-user/list-user.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n  <h2 class=\\\"text-center\\\">Add User</h2>\\r\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Email address:</label>\\r\\n      <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">First Name:</label>\\r\\n      <input formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"lastName\\\">Last Name:</label>\\r\\n      <input formControlName=\\\"lastName\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\">\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\">Update</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {UserService} from \"../service/user.service\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\r\n\r\n  addForm: FormGroup;\r\n\r\n  ngOnInit() {\r\n\r\n    this.addForm = this.formBuilder.group({\r\n      id: [],\r\n      email: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.createUser(this.addForm.value)\r\n      .subscribe( data => {\r\n        this.router.navigate(['list-user']);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {routing} from \"./app.routing\";\r\nimport {AuthenticationService} from \"./service/auth.service\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport {ListUserComponent} from \"./list-user/list-user.component\";\r\nimport {UserService} from \"./service/user.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ListUserComponent,\r\n    AddUserComponent,\r\n    EditUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    routing,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [AuthenticationService, UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {AddUserComponent} from \"./add-user/add-user.component\";\r\nimport {ListUserComponent} from \"./list-user/list-user.component\";\r\nimport {EditUserComponent} from \"./edit-user/edit-user.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'add-user', component: AddUserComponent },\r\n  { path: 'list-user', component: ListUserComponent },\r\n  { path: 'edit-user', component: EditUserComponent },\r\n  {path : '', component : LoginComponent}\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n  <h2 class=\\\"text-center\\\">Edit User</h2>\\r\\n  <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Email address:</label>\\r\\n      <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">First Name:</label>\\r\\n      <input formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"lastName\\\">Last Name:</label>\\r\\n      <input formControlName=\\\"lastName\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\">\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\">Update</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../service/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {User} from \"../model/user.model\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  user: User;\r\n  editForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    let userId = localStorage.getItem(\"editUserId\");\r\n    if(!userId) {\r\n      alert(\"Invalid action.\")\r\n      this.router.navigate(['list-user']);\r\n      return;\r\n    }\r\n    this.editForm = this.formBuilder.group({\r\n      id: [],\r\n      email: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required]\r\n    });\r\n    this.userService.getUserById(+userId)\r\n      .subscribe( data => {\r\n        this.editForm.setValue(data);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.updateUser(this.editForm.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['list-user']);\r\n        },\r\n        error => {\r\n          alert(error);\r\n        });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n  <h2> User Details</h2>\\r\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"addUser()\\\"> Add User</button>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th class=\\\"hidden\\\">Id</th>\\r\\n      <th>FirstName</th>\\r\\n      <th>LastName</th>\\r\\n      <th>Email</th>\\r\\n      <th>Action</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let user of users\\\">\\r\\n      <td class=\\\"hidden\\\">{{user.id}}</td>\\r\\n      <td>{{user.firstName}}</td>\\r\\n      <td>{{user.lastName}}</td>\\r\\n      <td>{{user.email}}</td>\\r\\n      <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser(user)\\\"> Delete</button>\\r\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"editUser(user)\\\" style=\\\"margin-left: 20px;\\\"> Edit</button></td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {UserService} from \"../service/user.service\";\r\nimport {User} from \"../model/user.model\";\r\n\r\n@Component({\r\n  selector: 'app-list-user',\r\n  templateUrl: './list-user.component.html',\r\n  styleUrls: ['./list-user.component.css']\r\n})\r\nexport class ListUserComponent implements OnInit {\r\n\r\n  users: User[];\r\n\r\n  constructor(private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUsers()\r\n      .subscribe( data => {\r\n        this.users = data;\r\n      });\r\n  }\r\n\r\n  deleteUser(user: User): void {\r\n    this.userService.deleteUser(user.id)\r\n      .subscribe( data => {\r\n        this.users = this.users.filter(u => u !== user);\r\n      })\r\n  };\r\n\r\n  editUser(user: User): void {\r\n    localStorage.removeItem(\"editUserId\");\r\n    localStorage.setItem(\"editUserId\", user.id.toString());\r\n    this.router.navigate(['edit-user']);\r\n  };\r\n\r\n  addUser(): void {\r\n    this.router.navigate(['add-user']);\r\n  };\r\n}\r\n","module.exports = \".error{\\r\\n  color: #FF0000;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-6 col-md-offset-2\\\">\\r\\n    <h1>Login </h1>\\r\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email address:</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\">\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"error\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"pwd\\\">Password:</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"pwd\\\">\\r\\n        <div *ngIf=\\\"submitted && loginForm.controls.password.errors\\\" class=\\\"error\\\">\\r\\n          <div *ngIf=\\\"loginForm.controls.password.errors.required\\\">Password is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-default\\\">Login</button>\\r\\n      <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\r\\n        <div>Invalid credentials.</div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {AuthenticationService} from \"../service/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted: boolean = false;\r\n  invalidLogin: boolean = false;\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthenticationService) { }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    if(this.loginForm.controls.email.value == 'dhiraj@gmail.com' && this.loginForm.controls.password.value == 'password') {\r\n        this.router.navigate(['list-user']);\r\n    }else {\r\n      this.invalidLogin = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    return this.http.post<any>('/api/authenticate', {username: username, password: password})\r\n      .pipe(map(user => {\r\n        // login successful if there's a jwt token in the response\r\n        if (user && user.token) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n        }\r\n\r\n        return user;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {User} from \"../model/user.model\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n  baseUrl: string = 'http://localhost:8080/user-portal/users';\r\n\r\n  getUsers() {\r\n    /* let fakeUsers = [{id: 1, firstName: 'Dhiraj', lastName: 'Ray', email: 'dhiraj@gmail.com'},\r\n     {id: 1, firstName: 'Tom', lastName: 'Jac', email: 'Tom@gmail.com'},\r\n     {id: 1, firstName: 'Hary', lastName: 'Pan', email: 'hary@gmail.com'},\r\n     {id: 1, firstName: 'praks', lastName: 'pb', email: 'praks@gmail.com'},\r\n   ];\r\n   return Observable.of(fakeUsers).delay(5000);*/\r\n    return this.http.get<User[]>(this.baseUrl);\r\n  }\r\n\r\n  getUserById(id: number) {\r\n    return this.http.get<User>(this.baseUrl + '/' + id);\r\n  }\r\n\r\n  createUser(user: User) {\r\n    return this.http.post(this.baseUrl, user);\r\n  }\r\n\r\n  updateUser(user: User) {\r\n    return this.http.put(this.baseUrl + '/' + user.id, user);\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.http.delete(this.baseUrl + '/' + id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}